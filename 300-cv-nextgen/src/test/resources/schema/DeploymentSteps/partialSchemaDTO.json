{
  "schema" : {
    "type": "object",
    "required": [
      "identifier",
      "name",
      "type"
    ],
    "properties": {
      "description": {
        "type": "string"
      },
      "identifier": {
        "type": "string",
        "pattern": "^[a-zA-Z_][0-9a-zA-Z_$]{0,63}$"
      },
      "name": {
        "type": "string",
        "pattern": "^[a-zA-Z_][-0-9a-zA-Z_\\s]{0,63}$"
      },
      "timeout": {
        "type": "string",
        "pattern": "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(<\\+input>.*)|(.*<\\+.*>.*))$"
      },
      "type": {
        "type": "string",
        "enum": [
          "Verify"
        ]
      },
      "when": {
        "$ref": "#/definitions/cvng/StepWhenCondition"
      }
    },
    "$schema": "http://json-schema.org/draft-07/schema#",
    "allOf": [
      {
        "if": {
          "properties": {
            "type": {
              "const": "Verify"
            }
          }
        },
        "then": {
          "properties": {
            "spec": {
              "$ref": "#/definitions/cvng/CVNGStepInfo"
            }
          }
        }
      }
    ],
    "definitions": {
      "cvng": {
        "BlueGreenVerificationJobSpec": {
          "allOf": [
            {
              "$ref": "#/definitions/cvng/VerificationJobSpec"
            },
            {
              "type": "object",
              "properties": {
                "trafficSplitPercentage": {
                  "type": "string",
                  "description": "Example: 50, You can put max upto 50."
                }
              }
            }
          ],
          "$schema": "http://json-schema.org/draft-07/schema#"
        },
        "CVNGStepInfo": {
          "type": "object",
          "required": [
            "type"
          ],
          "properties": {
            "type": {
              "type": "string"
            }
          },
          "$schema": "http://json-schema.org/draft-07/schema#",
          "allOf": [
            {
              "if": {
                "properties": {
                  "type": {
                    "const": "Bluegreen"
                  }
                }
              },
              "then": {
                "properties": {
                  "spec": {
                    "$ref": "#/definitions/cvng/BlueGreenVerificationJobSpec"
                  }
                }
              }
            },
            {
              "if": {
                "properties": {
                  "type": {
                    "const": "Canary"
                  }
                }
              },
              "then": {
                "properties": {
                  "spec": {
                    "$ref": "#/definitions/cvng/CanaryVerificationJobSpec"
                  }
                }
              }
            },
            {
              "if": {
                "properties": {
                  "type": {
                    "const": "LoadTest"
                  }
                }
              },
              "then": {
                "properties": {
                  "spec": {
                    "$ref": "#/definitions/cvng/TestVerificationJobSpec"
                  }
                }
              }
            },
            {
              "if": {
                "properties": {
                  "type": {
                    "const": "Rolling"
                  }
                }
              },
              "then": {
                "properties": {
                  "spec": {
                    "$ref": "#/definitions/cvng/ImprovisedCanaryVerificationJobSpec"
                  }
                }
              }
            }
          ]
        },
        "CVVerifyStepNode": {
          "type": "object",
          "required": [
            "identifier",
            "name",
            "type"
          ],
          "properties": {
            "description": {
              "type": "string"
            },
            "identifier": {
              "type": "string",
              "pattern": "^[a-zA-Z_][0-9a-zA-Z_$]{0,63}$"
            },
            "name": {
              "type": "string",
              "pattern": "^[a-zA-Z_][-0-9a-zA-Z_\\s]{0,63}$"
            },
            "timeout": {
              "type": "string",
              "pattern": "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(<\\+input>.*)|(.*<\\+.*>.*))$"
            },
            "type": {
              "type": "string",
              "enum": [
                "Verify"
              ]
            },
            "when": {
              "$ref": "#/definitions/cvng/StepWhenCondition"
            }
          },
          "$schema": "http://json-schema.org/draft-07/schema#",
          "allOf": [
            {
              "if": {
                "properties": {
                  "type": {
                    "const": "Verify"
                  }
                }
              },
              "then": {
                "properties": {
                  "spec": {
                    "$ref": "#/definitions/cvng/CVNGStepInfo"
                  }
                }
              }
            }
          ]
        },
        "CanaryVerificationJobSpec": {
          "allOf": [
            {
              "$ref": "#/definitions/cvng/VerificationJobSpec"
            },
            {
              "type": "object",
              "properties": {
                "trafficSplitPercentage": {
                  "type": "string",
                  "description": "Example: 50, You can put max upto 50."
                }
              }
            }
          ],
          "$schema": "http://json-schema.org/draft-07/schema#"
        },
        "ImprovisedCanaryVerificationJobSpec": {
          "allOf": [
            {
              "$ref": "#/definitions/cvng/VerificationJobSpec"
            },
            {
              "type": "object",
              "properties": {
                "trafficSplitPercentage": {
                  "type": "string",
                  "description": "Example: 50, You can put max upto 50."
                }
              }
            }
          ],
          "$schema": "http://json-schema.org/draft-07/schema#"
        },
        "StepWhenCondition": {
          "type": "object",
          "required": [
            "stageStatus"
          ],
          "properties": {
            "condition": {
              "type": "string"
            },
            "stageStatus": {
              "type": "string",
              "enum": [
                "Success",
                "Failure",
                "All"
              ]
            }
          },
          "$schema": "http://json-schema.org/draft-07/schema#"
        },
        "TestVerificationJobSpec": {
          "allOf": [
            {
              "$ref": "#/definitions/cvng/VerificationJobSpec"
            },
            {
              "type": "object",
              "properties": {}
            }
          ],
          "$schema": "http://json-schema.org/draft-07/schema#"
        },
        "VerificationJobSpec": {
          "type": "object",
          "required": [
            "deploymentTag",
            "duration",
            "sensitivity"
          ],
          "discriminator": "type",
          "properties": {
            "deploymentTag": {
              "type": "string",
              "description": "You can put expression <+serviceConfig.artifacts.primary.tag> to resolve primary tag"
            },
            "duration": {
              "type": "string",
              "description": "Format example: 5m, 30m, please put multiple of 5"
            },
            "sensitivity": {
              "type": "string",
              "description": "Possible values: [Low, Medium, High]"
            }
          },
          "$schema": "http://json-schema.org/draft-07/schema#"
        }
      }
    }
  },
  "nodeType" : "Verify",
  "nodeName" : "CVNGStageInfo",
  "namespace" : "cvng",
  "skipStageSchema" : true,
  "moduleType" : "CV"
}