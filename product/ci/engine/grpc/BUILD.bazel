load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")

go_library(
    name = "grpc",
    srcs = [
        "engine_handler.go",
        "logproxy_handler.go",
        "server.go",
        "tiproxy_handler.go",
    ],
    importpath = "github.com/harness/harness-core/product/ci/engine/grpc",
    visibility = ["//visibility:public"],
    deps = [
        "//commons/go/lib/filesystem",
        "//commons/go/lib/images",
        "//product/ci/addon/parser/cg",
        "//product/ci/common/avro",
        "//product/ci/common/external",
        "//product/ci/engine/legacy/jexl",
        "//product/ci/engine/legacy/state",
        "//product/ci/engine/new/executor",
        "//product/ci/engine/output",
        "//product/ci/engine/proto",
        "//product/ci/ti-service/types",
        "//product/log-service/stream",
        "@com_github_pkg_errors//:errors",
        "@org_golang_google_grpc//:go_default_library",
        "@org_golang_google_grpc//codes",
        "@org_golang_google_grpc//status",
        "@org_golang_x_net//context",
        "@org_uber_go_zap//:zap",
    ],
)

go_test(
    name = "grpc_test",
    srcs = [
        "engine_handler_test.go",
        "logproxy_handler_test.go",
        "server_test.go",
    ],
    embed = [":grpc"],
    deps = [
        "//commons/go/lib/logs",
        "//product/ci/engine/output",
        "//product/ci/engine/proto",
        "//product/log-service/client",
        "//product/log-service/mock",
        "//product/log-service/stream",
        "@com_github_golang_mock//gomock",
        "@com_github_stretchr_testify//assert",
        "@org_golang_google_grpc//:go_default_library",
        "@org_uber_go_zap//:zap",
    ],
)
