load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")

go_library(
    name = "status",
    srcs = ["step_status.go"],
    importpath = "github.com/harness/harness-core/product/ci/engine/status",
    visibility = ["//visibility:public"],
    deps = [
        "//910-delegate-task-grpc-service/src/main/proto/io/harness/task/service",
        "//920-delegate-service-beans/src/main/proto/io/harness/callback",
        "//920-delegate-service-beans/src/main/proto/io/harness/delegate",
        "//955-delegate-beans/src/main/proto/io/harness/delegate",
        "//commons/go/lib/delegate-task-grpc-service/grpc",
        "//commons/go/lib/utils",
        "//product/ci/engine/output",
        "//product/ci/engine/proto",
        "@com_github_cenkalti_backoff_v4//:backoff",
        "@com_github_gogo_protobuf//jsonpb",
        "@com_github_pkg_errors//:errors",
        "@org_golang_google_grpc//metadata",
        "@org_golang_google_grpc//status",
        "@org_golang_google_protobuf//types/known/durationpb",
        "@org_uber_go_zap//:zap",
    ],
)

go_test(
    name = "status_test",
    srcs = ["step_status_test.go"],
    embed = [":status"],
    deps = [
        "//910-delegate-task-grpc-service/src/main/proto/io/harness/task/service",
        "//commons/go/lib/delegate-task-grpc-service/grpc",
        "//commons/go/lib/logs",
        "@com_github_golang_mock//gomock",
        "@com_github_pkg_errors//:errors",
        "@com_github_stretchr_testify//assert",
        "@org_uber_go_zap//:zap",
    ],
)
